首先我们需要知道，我们的.h文件的特殊的含义
首先，我们的声明的.h或者声明的.cpp文件在我们的预处理阶段会被赋值添加到主函数代码段中生成预处理的.i文件
之后会根据我们的搜索路径去查询.h文件或者.cpp文件对应的具体的实现的源代码文件
在最后的链接过程中这些具体的代码段会被动态或者静态的添加到我们的.o目标文件中
这样子使得我们的库和具体的代码实现的分离，.h文件也方便我们对代码信息的管理和维护
但是C++中的模板却并不支持我们的这样的分离的编译
我们只能将连接的文件直接改成.cpp或者将具体实现一起写在头文件里等待预处理
