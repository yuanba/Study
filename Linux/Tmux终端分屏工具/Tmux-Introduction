Tmux可以帮助我们及时的分享我们的屏幕，将更多额终端清晰的一次性的呈现在我们的面前，方便我们的使用

1.命令前缀：Ctrl-b(以下简写为c-b)
Tmux的所有的命令和操作大部分都需要我们的c-b来支持，也是为了区分我们的Tmux和其他程序的使用的热键

2.首先我们需要阐明一下三个概念
    1.会话 session ：
        会话我们可以理解成是我们的一个工作组，在这里我们可以加入很多的windows（窗口）
        每一个会话都是最高级的层次
    2.窗口 windows ： 
        窗口就是我们的当前的使用的终端的界面，这个界面属于一个会话，并且这个界面可以分割成很多的窗格，实现我们的窗口的复用，方便我们的编写程序和工作
    3.窗格 panel ： 
        窗格实现了我们的对串口的划分，复用我们的窗口界面

3.基本操作：
    1.窗格操作：
        1.c-b + " : 水平划分
        2.c-b + % : 竖直划分
        3.c-b + 方向键 ：切换窗格
        4.c-b(不松开) + 方向键 : 调整窗格大小
        5.c-b + q : 显示窗格的编号
    2.窗口操作:
        1.c-b + space : 按照已经存在的窗格数目，生成下一个内置的窗口布局
        2.c-b + & / c-d : 第一个是授权删除一个窗口，后者是快速的删除一个窗口，窗口删除完毕之后我们的会话也就删除
        3.c-b + c : 生成新的窗口
        4.c-b + n / p / number: 前者是切换下一个窗口，后者是切换前一个窗口，最后是切换至指定的窗口
        5.c-b + , : 窗口重命名
    3.会话操作：
        1.c-b + $ : 重命名会话
        2.tmux / tmux new / tmux new -s session0name : 建立一个新的会话，建立一个新的会话，建立一个新的会话并且命名
        3.tmux ls : 显示已经存在的会话
        4.tmux a -t session-name : 登陆一个会话


4.基本要点：
    1.我们需要注意我们的会话，如果没有显示的中断掉（kill）护着没有出现窗口为０的情况，我们的会话其实就算终端不见了，也还是存在进程的
      我们只需要
          tmux ls
          tmux a -t session-name
      就可以再次的连接上我们的会话
      只要我们没有关机的话，我们的这个会话就会保证完整（这一点可以应用在我们的后台运行中）
    2.每个窗格(panel)的进程号(PID)都不相同